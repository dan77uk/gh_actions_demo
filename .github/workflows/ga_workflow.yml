name: Deploy App
on:
  push
  # pull_request:
  #   types: [opened, synchronize]
  # workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #     - activity_branch
  #   paths-ignore:
  #     - ".github/workflows/*"

# jobs:
#   push_deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download Code
#         uses: actions/checkout@v3
#       - name: inspect download
#         run: |
#           pwd
#           ls -lart

jobs:
  uploading_artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: make a new file
        run: |
          pwd
          touch new_file
          echo "this will be uploaded" > new_file
          echo "FILE_PATH=$(pwd)/new_file" >> $GITHUB_ENV
      - name: Upload an artifact
        uses: actions/upload-artifact@v3
        with:
          name: upload_files
          # path: new_file
          # path: /home/runner/work/gh_actions_demo/gh_actions_demo/new_file
          path: "${{ env.FILE_PATH }}"
  deploy_container:
    runs-on: ubuntu-latest
    steps:
      - name: Download Code
        uses: actions/checkout@v3
      - name: Deploy a Container for testing
        run: |
          docker image pull nginx
          docker image ls
          docker container run -d -p 8080:80 nginx
      - name: Test Web Deployment
        run: |
          python3 -c "import requests; r=requests.get('http://localhost:8080'); print(r.status_code)"
          curl -s localhost:8080
  deploy_web_app:
    needs: [deploy_container]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy a container to a cloud provider
        run: echo "Deploying..."
  second_deploy_web_app:
    needs: [deploy_container]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy a container to a cloud provider
        run: echo "Deploying...again"
  third_deploy_web_app:
    needs: [second_deploy_web_app]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy a container to a cloud provider
        run: echo "Deploying...for the third time"
  show_info:
    runs-on: ubuntu-latest
    steps:
      - name: Output 'github' Context
        run: echo "${{toJSON(github)}}"
